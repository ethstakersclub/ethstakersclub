"""
Django settings for ethstakersclub project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django_celery_beat',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'captcha',
    'blockfetcher',
    'api',
    'users',
    'frontend',
]

SITE_ID=1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ethstakersclub.urls'

WSGI_APPLICATION = 'ethstakersclub.wsgi.application'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_FORMS = {
    'signup': 'users.forms.CustomSignupForm',
}

ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_VERIFICATION = 'none'

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'users.CustomUser'


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOGIN_REDIRECT_URL = 'dashboard_empty'
LOGOUT_REDIRECT_URL = 'dashboard_empty'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ACTIVE_STATUSES = frozenset({"active_ongoing", "active_exiting", "active_slashed"})
PENDING_STATUSES = frozenset({"pending_queued", "pending_initialized"})
EXITED_STATUSES = frozenset({"exited_unslashed", "exited_slashed", "withdrawal_possible", "withdrawal_done"})
EXITING_STATUSES = frozenset({"active_exiting", "active_slashed"})

eth_clients = [
    {
        "client_name": "Nethermind",
        "repository_owner": "NethermindEth",
        "repo_name": "nethermind",
        "type": "execution"
    },
    {
        "client_name": "Geth",
        "repository_owner": "ethereum",
        "repo_name": "go-ethereum",
        "type": "execution"
    },
    {
        "client_name": "Erigon",
        "repository_owner": "ledgerwatch",
        "repo_name": "erigon",
        "type": "execution"
    },
    {
        "client_name": "Besu",
        "repository_owner": "hyperledger",
        "repo_name": "besu",
        "type": "execution"
    },
    {
        "client_name": "Teku",
        "repository_owner": "ConsenSys",
        "repo_name": "teku",
        "type": "consensus"
    },
    {
        "client_name": "Prysm",
        "repository_owner": "prysmaticlabs",
        "repo_name": "prysm",
        "type": "consensus"
    },
    {
        "client_name": "Nimbus",
        "repository_owner": "status-im",
        "repo_name": "nimbus-eth2",
        "type": "consensus"
    },
    {
        "client_name": "Lodestar",
        "repository_owner": "ChainSafe",
        "repo_name": "lodestar",
        "type": "consensus"
    },
    {
        "client_name": "Lighthouse",
        "repository_owner": "sigp",
        "repo_name": "lighthouse",
        "type": "consensus"
    },
    {
        "client_name": "MEV-Boost",
        "repository_owner": "flashbots",
        "repo_name": "mev-boost",
        "type": "other"
    }
]

from settings import *
from ethstakersclub.monitoring_ranks import MONITORING_RANKS